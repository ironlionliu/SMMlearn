<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- 引入dbconfig.properties属性文件 -->

    <context:component-scan base-package="com.springmvc.dao" />
    <context:component-scan base-package="com.springmvc.controller" />
    <context:component-scan base-package="com.springmvc.service" />

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>



    <!--配置数据源,这里可以换成C3P0,DBCP等等其他的链接方式-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/mybatistest" />
        <property name="user" value="root" />
        <property name="password" value="" />
    </bean>


    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:/mappers/testMapper.xml"/>
        <!--<property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>-->
        <!--<property name="typeAliasesPackage" value="com.gcoreinc.domain"/>-->
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.springmvc.dao"/>
    </bean>

    <!--&lt;!&ndash; 配置事务管理器 &ndash;&gt;-->
    <!--<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">-->
    <!--&lt;!&ndash; 注入数据库连接池 &ndash;&gt;-->
    <!--<property name="dataSource" ref="dataSource">-->
    <!--</property></bean>-->

    <!--&lt;!&ndash; 配置基于注解的声明式事务 &ndash;&gt;-->
    <!--<tx:annotation-driven transaction-manager="transactionManager">-->


</beans>